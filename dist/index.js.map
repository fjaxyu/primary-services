{"version":3,"file":"index.js","mappings":"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","sources":["webpack://primary-services/webpack/universalModuleDefinition","webpack://primary-services/./node_modules/node-fetch/browser.js","webpack://primary-services/./src/components/HttpService/index.ts","webpack://primary-services/./src/components/TypeService/index.ts","webpack://primary-services/./src/components/UtilityService/index.ts","webpack://primary-services/./node_modules/unfetch/dist/unfetch.module.js","webpack://primary-services/webpack/bootstrap","webpack://primary-services/webpack/runtime/compat get default export","webpack://primary-services/webpack/runtime/define property getters","webpack://primary-services/webpack/runtime/hasOwnProperty shorthand","webpack://primary-services/webpack/runtime/make namespace object","webpack://primary-services/./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn ","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import UtilityService from '../UtilityService';\nimport TypeService from '../TypeService';\n\nlet fetch;\n\ntry {\n    if (typeof window !== 'undefined') {\n        //browser\n        fetch = require('unfetch');\n    } else {\n        //server\n        fetch = require('node-fetch').default;\n    }\n} catch (error) {\n    fetch = require('node-fetch').default;\n}\n\n\n//--==--==----==--==--==--==----==--==----==--==----==--==--==--==----==--==--//\n//PUBLIC METHODS\n\n\n/**\n *\n * @param {Object} options\n * @param {String} options.url\n * @param {'GET' | 'POST' | 'PUT' | 'DELETE'} options.method\n *\n * @param {Object} [options.body]\n * @param {Object} [options.data]\n * @param {Boolean} [options.useDefaultHeaders]\n * @param {Object} [options.query]\n *\n * @param {Object} [options.params]\n * @param {Object} [options.parameters]\n *\n * @param {Object} [options.headers]\n * @param {Object} [options.header]\n * @returns {Promise<any>}\n */\n\ntype AnyObject = Record<any, unknown>;\n\nexport type ValidBody = AnyObject | any[] | string | number;\n\nexport type HttpOptions = {\n    url: string,\n    method: 'GET' | 'PUT' | 'POST' | 'DELETE',\n    body?: ValidBody,\n    data?: ValidBody,\n    useDefaultHeaders?: boolean,\n    params?: AnyObject,\n    parameters?: AnyObject,\n    query?: AnyObject,\n    headers?: AnyObject,\n    header?: AnyObject,\n}\n\n\nexport type HttpResponse = {\n    status: number,\n    data: any,\n    response: ValidBody,\n    ok: boolean,\n    request: {\n        body: ValidBody,\n        method: HttpOptions['method'],\n        params: AnyObject,\n        url: string,\n        headers: AnyObject\n    }\n}\n\nexport async function http(options: HttpOptions): Promise<HttpResponse> {\n    return new Promise(async (resolve, reject) => {\n        const validMethods = ['GET', 'PUT', 'POST', 'DELETE'];\n\n        if (TypeService.isObject(options) === false) {\n            return reject(new Error('options (Object) is required'));\n        } else if (TypeService.isString(options.url) === false) {\n            return reject(new Error('options.url (String) is required'));\n        } else if (TypeService.isString(options.method) === false) {\n            return reject(new Error('options.method (String) is required'));\n        } else if (validMethods.includes(options.method.toUpperCase()) === false) {\n            return reject(new Error(`options.method must be one of the following values ${JSON.stringify(validMethods)}`));\n        }\n\n        options = UtilityService.validateItem(options, 'object', {});\n        options.useDefaultHeaders = (options.useDefaultHeaders !== false);\n\n        let body = <any>undefined;\n\n        if (TypeService.isObject(options.data)) {\n            body = options.data;\n        } else if (TypeService.isObject(options.body)) {\n            body = options.body;\n        }\n\n        if (TypeService.isArray(body) || TypeService.isObject(body)) {\n            body = JSON.stringify(body);\n        }\n\n\n        let url = options.url;\n        let parameterObject = {};\n\n        if (TypeService.isObject(options.params)) {\n            parameterObject = options.params as AnyObject;\n        } else if (TypeService.isObject(options.parameters)) {\n            parameterObject = options.parameters as AnyObject;\n        } else if (TypeService.isObject(options.query)) {\n            parameterObject = options.query as AnyObject;\n        }\n\n        if (TypeService.isObject(parameterObject, true)) {\n            const stringParams = Object.entries(parameterObject).map(([key, val]) => {\n                val = (Array.isArray(val) || typeof val === 'object') ? JSON.stringify(val) : val;\n                return `${key}=${val}`;\n            }).join('&');\n\n            url = url + '?' + encodeURI(stringParams);\n        }\n\n\n        let headers = {};\n\n        if (TypeService.isObject(options.headers)) {\n            headers = options.headers as AnyObject;\n        } else if (TypeService.isObject(options.header)) {\n            headers = options.header as AnyObject;\n        }\n\n        if (options.useDefaultHeaders) {\n            headers['accept'] = 'application/json';\n            headers['content-type'] = 'application/json';\n        }\n\n\n        let method = options.method.toUpperCase();\n\n        if (method === 'GET') {\n            headers['Accept'] = 'application/x-www-form-urlencoded';\n            headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        }\n\n\n        const isAbsoluteUrl = (url.substr(0, 4) === 'http');\n\n\n        let response = {\n            headers: {},\n            status: 0,\n            statusText: null\n        };\n\n        fetch(url, {\n            method,\n            headers,\n            body\n        }).then((responseData) => {\n            let status = responseData.status;\n\n            response = {\n                status: responseData.status,\n                headers: _getAllHeaders(responseData),\n                statusText: responseData.statusText\n            };\n\n            let isJson = false;\n\n            try {\n                isJson = response.headers['content-type'].includes('application/json');\n            } catch (e) {\n                isJson = false;\n            }\n\n            let jsonResponse = {};\n\n            if (status === 204) {\n                jsonResponse = '';\n            } else {\n                if (isJson) {\n                    jsonResponse = responseData.json();\n                } else {\n                    jsonResponse = responseData.text();\n                }\n            }\n\n            return jsonResponse;\n        }).then((responseJson) => {\n            const responseObject = {\n                status: response.status,\n                data: responseJson,\n                response: response,\n                ok: (response.status >= 200 && response.status < 300),\n                request: {\n                    body: body,\n                    method: method,\n                    params: parameterObject,\n                    url: url,\n                    headers: headers\n                }\n            } as HttpResponse;\n\n            resolve(responseObject);\n        }).catch(reject);\n    });\n}\n\n\n//--==--==----==--==--==--==----==--==----==--==----==--==--==--==----==--==--//\n//PRIVATE METHODS\n\n\n/**\n *\n * @param {Object} responseData\n * @param {Array} responseData.headers\n * @private\n */\nexport function _getAllHeaders(responseData: { headers }) {\n    if (!TypeService.isObject(responseData)) {\n        throw Error('responseData (Object) is required');\n    }\n\n    let headers = {};\n\n    responseData.headers.forEach((value, name) => {\n        headers[name] = value;\n    });\n\n    return headers;\n}\n\n\n\nexport default {\n    http: http,\n    _getAllHeaders: _getAllHeaders\n};","/**\n * @description this ensures that an item is undefined\n *\n * @param {*} item - item to be tested\n * @returns {Boolean} - true or false\n */\nexport function isUndefined(item) {\n    return typeof item === 'undefined';\n}\n\n\n\n/**\n * @description this ensures that an item is null\n *\n * @param {*} item - item to be tested\n * @returns {Boolean} - true or false\n */\nexport function isNull(item) {\n    return item === null;\n}\n\n\n\n/**\n *@description this ensures an item is a date, or a valid date string\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [allowString=false] - allow a user to test if an item is a string and a valid date object\n * @returns {Boolean} - true or false\n */\nexport function isDate(item, allowString?) {\n    const isNotInvalidType = (!isUndefined(item) && !isNull(item) && !isNumeric(item) && !isBoolean(item) && !isArray(item));\n    const stringAllowance = (allowString !== true) ? !isString(item) : true;\n\n    if (isNotInvalidType && stringAllowance) {\n        if (allowString === true) {\n            item = new Date(item);\n        }\n\n        return ((item instanceof Date === true) && (item.toString() !== 'Invalid Date'));\n\n    } else {\n        return false;\n    }\n}\n\n\n\n/**\n * @description this ensures that an item is explicitly true or false\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [allowString=false] - allow 'true' and 'false' to return true\n * @param {*=} [equalityVal=null] - (true/false) if equalityVal is present, it will check to see if the value is true or false\n * @returns {Boolean} - true or false\n */\nexport function isBoolean(item, allowString?: boolean, equalityVal?: boolean | string) {\n    const itemIsBoolean = (item === true || item === false);\n    const itemIsStringBoolean = (item === 'true' || item === 'false');\n\n    if (equalityVal && equalityVal === 'true' || equalityVal === true || equalityVal === 'false' || equalityVal === false) {\n        const bothAreTrue = ((item === true || item === 'true') && (equalityVal === true || equalityVal === 'true'));\n        const bothAreFalse = ((item === false || item === 'false') && (equalityVal === false || equalityVal === 'false'));\n        const equalityValCheck = (bothAreFalse || bothAreTrue);\n\n        return ((allowString === true) ? (itemIsBoolean || itemIsStringBoolean) : itemIsBoolean) && equalityValCheck;\n    } else {\n        return (allowString === true) ? (itemIsBoolean || itemIsStringBoolean) : itemIsBoolean;\n    }\n}\n\n\n\n/**\n * @description this ensures that an item is an integer (a number without decimals)\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [withoutTypeConversion=false] - require that the item is not a string\n * @returns {Boolean} - true or false\n */\nexport function isInteger(item, withoutTypeConversion?: boolean) {\n    const itemIsInteger = (!isUndefined(item) && !isNull(item) && !isNaN(item) && (parseInt(Number(item) as any) == item) && !isNaN(parseInt(item, 10))); // eslint-disable-line\n    const isNotString = (withoutTypeConversion === true) ? (itemIsInteger === true && !isString(item)) : true;\n    return (itemIsInteger === true && isNotString === true);\n}\n\n\n\n/**\n * @description this ensures than an item is a number (with or without decimals)\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [withoutTypeConversion=false] - require that the item is not a string\n * @returns {Boolean} - true or false\n */\nexport function isNumeric(item, withoutTypeConversion?: boolean) {\n    const itemIsNumeric = (!isUndefined(item) && !isNull(item) && !isNaN(parseFloat(item)) && isFinite(item));\n    const isNotString = (withoutTypeConversion === true) ? (itemIsNumeric === true && !isString(item)) : true;\n    return (itemIsNumeric === true && isNotString === true);\n}\n\n\n\n/**\n * @description this ensures that an item is a function\n *\n * @param {*} item - item to be tested\n * @returns {Boolean} - true or false\n */\nexport function isFunction(item) {\n    return (!isUndefined(item) && !isNull(item) && typeof item === 'function');\n}\n\n\n\n/**\n * @description this ensures that an item is a string\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [requireNotEmpty=false] - require that the string has a length of at least one\n * @returns {Boolean} - true or false\n */\nexport function isString(item, requireNotEmpty?: boolean) {\n    const itemIsString = (!isUndefined(item) && !isNull(item) && typeof item === 'string');\n    const isNotEmpty = (requireNotEmpty === true) ? (itemIsString === true && item.length > 0) : true;\n    return (itemIsString === true && isNotEmpty === true);\n}\n\n\n\n/**\n * @description this ensures than an item is an object\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [requireNotEmpty=false] - require that the object has at least one key\n * @returns {Boolean} - true or false\n */\nexport function isObject(item, requireNotEmpty?: boolean) {\n    const itemIsObject = (!isUndefined(item) && !isNull(item) && !isDate(item) && typeof item === 'object' && !isFunction(item) && Array.isArray(item) === false);\n    const isNotEmpty = (requireNotEmpty === true) ? (itemIsObject === true && Object.keys(item).length > 0) : true;\n    return (itemIsObject === true && isNotEmpty === true);\n}\n\n\n\n/**\n * @description this ensures than an item is an array\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [requireNotEmpty=false] - require that the array has a length of at least one\n * @returns {Boolean} - true or false\n */\nexport function isArray(item, requireNotEmpty?: boolean) {\n    const isArray = !isUndefined(item) && !isNull(item) && Array.isArray(item);\n    const isNotEmpty = (requireNotEmpty === true) ? (isArray === true && item.length > 0) : true;\n    return (isArray === true && isNotEmpty === true);\n}\n\n\n/**\n *\n * @param {*} item\n * @returns {boolean} - true or false\n */\nexport function isIsoString(item) {\n    if (isString(item, true)) {\n        const isCorrectLength = item.length === 25;\n        const nonNumbersIsValid = item.split('').filter((character) => isNaN(character)).join('') === '--T::+:';\n\n        return isCorrectLength && nonNumbersIsValid;\n    } else {\n        return false;\n    }\n}\n\n\n\nexport default {\n    isUndefined: isUndefined,\n    isNull: isNull,\n    isDate: isDate,\n    isBoolean: isBoolean,\n    isInteger: isInteger,\n    isNumeric: isNumeric,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isArray: isArray,\n    isIsoString: isIsoString\n};","import TypeService from './../TypeService';\n\n//--==--==----==--==--==--==----==--==----==--==----==--==--==--==----==--==--//\n\n\n/**\n *\n * @param string\n * @returns {string}\n */\nexport function isEmailOrPhone(string) {\n    if (TypeService.isString(string, true)) {\n        return (string.indexOf('@') >= 0) ? 'email' : 'phone';\n    } else {\n        throw new Error('input is not string or is empty');\n    }\n}\n\n\n\n/**\n *\n * @param {Number} length\n * @returns {string}\n */\nexport function generateRandomNumberString(length) {\n    if (!TypeService.isInteger(length, true)) {\n        throw new Error('length (Integer) is required');\n    }\n\n    return repeatFunction(generateRandomInteger, length).join('');\n}\n\n\n\n/**\n *\n * @param {Function} callback\n * @param {Number} count\n * @returns {Array}\n */\nexport function repeatFunction(callback: Function, count) {\n    if (!TypeService.isFunction(callback)) {\n        throw new Error('callback (Function) is required');\n    }\n\n    if (!TypeService.isInteger(count)) {\n        throw new Error('count (Integer) is required');\n    }\n\n    const values = [];\n\n    for (let i = 0; i < count; i++) {\n        // @ts-ignore\n        values.push(callback());\n    }\n\n    return values;\n}\n\n\n\n/**\n *\n * @param {String} string\n * @param {Number} count\n * @param {String} [joiner]\n * @returns {string}\n */\nexport function repeatString(string, count, joiner?: string) {\n    joiner = (TypeService.isString(joiner)) ? joiner : '';\n\n    return repeatFunction(() => {\n        return string;\n    }, count).join(joiner);\n}\n\n\n\n/**\n *\n * @param {String} phone\n * @returns {boolean}\n */\nexport function isValidPhone(phone) {\n    return !!((TypeService.isString(phone) || TypeService.isInteger(phone)) && sanitizePhone(phone).length === 10);\n}\n\n\n\n/**\n *\n * @param {String} phone\n * @returns {String}\n */\nexport function obfuscatePhone(phone) {\n    if (isValidPhone(phone)) {\n        phone = sanitizePhone(phone);\n\n        return `(${phone.substr(0, 1)}**) ***-**${phone.substr(8, 2)}`;\n    } else {\n        throw new Error('phone (String) must be 10 digits long and only numbers');\n    }\n}\n\n\n\n/**\n *\n * @param {String} email\n * @returns {string}\n */\nexport function obfuscateEmail(email) {\n    if (isValidEmail(email)) {\n        email = sanitizeEmail(email);\n        const charactersToBeShown = 2;\n\n        let emailSplit = email.split('@');\n\n        const part1 = emailSplit[0];\n        let part2 = emailSplit[1];\n\n        let part2Split = part2.split('.');\n        const ending = '.' + part2Split[part2Split.length - 1];\n\n        part2Split.pop();\n\n        part2 = part2Split.join('.');\n\n\n        let parts = [\n            part1.substr(0, charactersToBeShown),\n            repeatString('*', part1.length - charactersToBeShown),\n            '@',\n            part2.substr(0, charactersToBeShown),\n            repeatString('*', part2.length - charactersToBeShown),\n            ending\n        ];\n\n        return parts.join('');\n    } else {\n        throw new Error('email (String) must be a valid email');\n    }\n}\n\n\n\n/**\n *\n * @param {String} email\n * @returns {boolean}\n */\nexport function isValidEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (TypeService.isString(email)) {\n        return re.test(email.trim());\n    } else {\n        return false;\n    }\n}\n\n\n\n/**\n *\n * @param {String} phone\n * @returns {String}\n */\nexport function sanitizePhone(phone) {\n    if (TypeService.isInteger(phone, true)) {\n        phone = '' + phone;\n    }\n\n    return phone.replace(/[^0-9]/g, '').trim();\n}\n\n\n\n/**\n *\n * @param {String} email\n * @returns {string}\n */\nexport function sanitizeEmail(email) {\n    return email.trim().toLowerCase();\n}\n\n\n\n/**\n *\n * @param {Array} array\n * @param {String} value\n * @returns {boolean}\n */\nexport function arrayOfStringsContainsValue(array, value) {\n    if (!TypeService.isArray(array)) {\n        throw new Error('array (Array) is required');\n    } else if (!TypeService.isString(value, true)) {\n        throw new Error('value (String) is required and cannot be empty');\n    }\n\n    return (getIndexOfItemThatContainsValueFromArray(array, value) > -1);\n}\n\n\n\n/**\n *\n * @param {Array} array\n * @param {String} value\n * @returns {number}\n */\nexport function getIndexOfItemThatContainsValueFromArray(array, value) {\n    if (!TypeService.isArray(array)) {\n        throw new Error('array (Array) is required');\n    } else if (!TypeService.isString(value, true)) {\n        throw new Error('value (String) is required and cannot be empty');\n    }\n\n    let foundIndex = -1;\n\n    for (let i = 0; i < array.length; i++) {\n        const arrayItem = array[i];\n\n        if (arrayItem.includes(value)) {\n            foundIndex = i;\n            i = array.length;\n        }\n    }\n\n    return foundIndex;\n}\n\n\n\n/**\n *\n * @param {*} value\n *\n * @returns {string}\n */\nexport function convertValueToStringValue(value) {\n    if (TypeService.isArray(value, true) || TypeService.isObject(value, true)) {\n        return JSON.stringify(value);\n    } else if (TypeService.isString(value)) {\n        return '\"' + value + '\"';\n    } else {\n        return '' + value;\n    }\n}\n\n\n\n/**\n * @description This function will check if a value is equal to 1, and return a string if the value is plural or not\n *\n * @param {Number} count\n * @param {String} [pluralQualifier] - The value to be returned if not singular\n * @param {String} [singularQualifier] - The value to be returned if singular\n *\n * @returns {string}\n */\nexport function pluralityQualifier(count: number, pluralQualifier?: string, singularQualifier?: string): string {\n    pluralQualifier = (TypeService.isString(pluralQualifier)) ? pluralQualifier : '';\n    singularQualifier = (TypeService.isString(singularQualifier)) ? singularQualifier : '';\n\n    return ((count === 1) ? singularQualifier : pluralQualifier) as string;\n}\n\n\n\n/**\n *\n * @param {*} item\n * @param {'undefined' | 'null' | 'object' | 'date' | 'boolean' | 'integer' | 'number' | 'function' | 'string' | 'array'} type\n * @param {*} [defaultValue]\n *\n * @returns {*}\n */\nexport function validateItem(item: any, type: (\n    'undefined' | 'null' | 'object' | 'date' | 'boolean' | 'integer' | 'number' | 'function' | 'string' | 'array'\n    ), defaultValue: any): any {\n    const typeMap = {\n        'undefined': TypeService.isUndefined,\n        'null': TypeService.isNull,\n        'object': TypeService.isObject,\n        'date': TypeService.isDate,\n        'boolean': TypeService.isBoolean,\n        'integer': TypeService.isInteger,\n        'number': TypeService.isNumeric,\n        'function': TypeService.isFunction,\n        'string': TypeService.isString,\n        'array': TypeService.isArray\n    };\n\n    const key = type.toLowerCase();\n\n    if (typeMap[key]) {\n        return (typeMap[key](item) === true) ? item : defaultValue;\n    } else {\n        throw new Error('invalid key');\n    }\n}\n\n\n\nexport function copyObject(item: any): any {\n    return JSON.parse(JSON.stringify({value: item})).value;\n}\n\n\n\nexport function searchStringToQueryParams(searchString: string): Record<any, unknown> {\n    if (searchString.includes('?')) {\n        let newString = searchString.split('?');\n        newString.shift();\n        searchString = newString.join('?');\n    }\n\n    try {\n        if (!(searchString.length >= 1)) {\n            return {};\n        }\n\n        return JSON.parse('{\"' + decodeURI(searchString).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n    } catch (error) {\n        return {};\n    }\n}\n\n\n\nexport function getQueryObjectFromUrl(url: string): Record<any, unknown> {\n    return searchStringToQueryParams(extractSearchString(url));\n}\n\n\n\nexport function extractEndpointWithoutSearchString(url: string) {\n    return url && url.includes('?') ? url.split(/\\?/)[0] : url;\n}\n\n\n\nexport function extractNumbersFromString(string: string) {\n    return string.replace(/[^0-9]/g, '');\n}\n\n\n\nexport function extractSearchString(url: string) {\n    return url && url.includes('?') ? url.split(/\\?/)[1] : '';\n}\n\n\n\nexport function sortArrayOfObjectsByKey(items: any[], key: string, descending = false) {\n    items = validateItem(items, 'array', []);\n\n    return items.sort(function (a, b) {\n        const valueA = _getValueForSorting(a[key]);\n        const valueB = _getValueForSorting(b[key]);\n\n        let comparison = 0;\n\n        if (valueA > valueB) {\n            comparison = -1;\n        } else if (valueA < valueB) {\n            comparison = 1;\n        }\n\n        return (descending === true) ? comparison : comparison * -1;\n    });\n}\n\n\n\nexport function roundNumber(value, decimals) {\n    decimals = validateItem(decimals, 'integer', 0);\n    const multiplier = Math.pow(10, decimals);\n\n    return (Math.round(value * multiplier) / multiplier);\n}\n\n\n\nexport function formatAsCurrency(amount: number, options?: { decimals?: number, round?: number, decimal?: string, thousands?: string, currencySign?: string }): string | null {\n    let decimalCount = validateItem(options && options.decimals, 'number', 2);\n\n    let round = validateItem(options && options.round, 'number', decimalCount);\n\n    let decimalSymbol = validateItem(options && options.decimal, 'string', '.');\n    let thousandSymbol = validateItem(options && options.thousands, 'string', ',');\n    const currencySign = validateItem(options && options.currencySign, 'string', '$');\n\n    try {\n        decimalCount = Math.abs(decimalCount);\n        decimalCount = TypeService.isInteger(decimalCount) ? 2 : decimalCount;\n\n        amount = validateItem(amount, 'number', 0);\n        const isNegative = amount < 0;\n        const negativeSign = (isNegative) ? '-' : '';\n\n        amount = roundNumber(amount, round);\n\n        let i = parseInt(Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n        let j = (i.length > 3) ? i.length % 3 : 0;\n\n        let stringArray = [\n            negativeSign,\n\n            currencySign,\n\n            (j ? i.substr(0, j) + thousandSymbol : ''),\n\n            i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandSymbol)\n        ];\n\n        if (decimalCount > 0) {\n            stringArray.push(decimalSymbol);\n\n            // @ts-ignore\n            stringArray.push(Math.abs(amount).toFixed(decimalCount).split('.')[1]);\n        }\n\n        return stringArray.join('');\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n}\n\n\n\n/**\n * @params {String} text\n *\n * @returns {String}\n */\nexport function toProperCase(text) {\n    if (TypeService.isString(text)) {\n        return text.replace(\n            /\\w\\S*/g,\n            function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    } else {\n        return text;\n    }\n}\n\n\n\nexport function extractQueryParametersFromUrl(url) {\n    let parameterObject = {};\n    let urlSplit = url.split('?');\n\n    if (urlSplit.length > 0) {\n        urlSplit.shift();\n\n        url = urlSplit.join('?');\n\n        const decodedSearch = decodeURI(url);\n\n        if (TypeService.isString(decodedSearch, true)) {\n            const options = decodedSearch.split('&');\n\n            options.forEach((optionObj) => {\n                if (TypeService.isString(optionObj, true) && optionObj.includes('=')) {\n                    const valueSplit = optionObj.split('=');\n                    let key, value;\n\n                    key = valueSplit[0];\n\n                    if (valueSplit.length > 1) {\n                        value = valueSplit[1].split('%2C').join(',');\n                    }\n\n                    parameterObject[key] = value;\n                }\n            });\n        }\n    }\n\n    return parameterObject;\n}\n\n\n\nexport function objectToQueryString(queryObject) {\n    const keys = Object.keys(queryObject);\n\n    return keys.filter((key) => !TypeService.isUndefined(queryObject[key])).map((key) => {\n        return [key, encodeURIComponent(queryObject[key])].join('=');\n    }).join('&');\n}\n\n\n\nexport function isJson(item: any | string): boolean {\n    try {\n        item = JSON.parse(item);\n    } catch (e) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\nexport function numberToPercentage(number: number, decimals: number): string {\n    return round(number * 100, decimals) + '%';\n}\n\n\n\nexport function round(number: number, decimals: number): number {\n    return +(Math.round(number + ('e+' + decimals) as any) + 'e-' + decimals);\n}\n\n\n\nexport function numberWithCommas(number = 0): string {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\n\n\n/**\n *\n * @param {Number} [min]\n * @param {Number} [max]\n *\n * @returns {Number}\n * @private\n */\nexport function generateRandomInteger(min, max) {\n    min = validateItem(min, 'integer', 0);\n    max = validateItem(max, 'integer', 9);\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n\nexport function _getValueForSorting(value) {\n    if (TypeService.isDate(value)) {\n        return value.getTime();\n    } else if (TypeService.isNumeric(value)) {\n        return Number(value);\n    } else if (TypeService.isString(value)) {\n        return value.toUpperCase();\n    } else {\n        return value;\n    }\n}\n\n\n\nexport default {\n    isEmailOrPhone,\n    generateRandomNumberString,\n    repeatFunction,\n    repeatString,\n    isValidPhone,\n    obfuscatePhone,\n    isJson,\n    extractQueryParametersFromUrl,\n    obfuscateEmail,\n    isValidEmail,\n    sanitizePhone,\n    numberToPercentage,\n    round,\n    numberWithCommas,\n    sanitizeEmail,\n    roundNumber,\n    toProperCase,\n    objectToQueryString,\n    formatAsCurrency,\n    arrayOfStringsContainsValue,\n    getIndexOfItemThatContainsValueFromArray,\n    convertValueToStringValue,\n    pluralityQualifier,\n    validateItem,\n    copyObject,\n    searchStringToQueryParams,\n    getQueryObjectFromUrl,\n    extractEndpointWithoutSearchString,\n    extractNumbersFromString,\n    extractSearchString,\n    sortArrayOfObjectsByKey,\n    generateRandomInteger,\n    _getValueForSorting\n};","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import HttpService from './src/components/HttpService';\nexport {HttpService};\n\n\n\nimport TypeService from './src/components/TypeService';\nexport {TypeService};\n\n\n\nimport UtilityService from './src/components/UtilityService';\nexport {UtilityService};\n\n\n\nexport default {\n    HttpService,\n    TypeService,\n    UtilityService\n};"],"names":["root","factory","exports","module","define","amd","a","i","this","global","self","window","Error","getGlobal","fetch","bind","Headers","Request","Response","error","http","options","Promise","resolve","reject","validMethods","isObject","isString","url","method","includes","toUpperCase","JSON","stringify","validateItem","useDefaultHeaders","body","undefined","data","isArray","parameterObject","params","parameters","query","stringParams","Object","entries","map","key","val","Array","join","encodeURI","headers","header","substr","response","status","statusText","then","responseData","_getAllHeaders","isJson","e","json","text","responseJson","responseObject","ok","request","catch","forEach","value","name","isUndefined","item","isNull","isDate","allowString","isNotInvalidType","isNumeric","isBoolean","stringAllowance","Date","toString","equalityVal","itemIsBoolean","itemIsStringBoolean","isInteger","withoutTypeConversion","itemIsInteger","isNaN","parseInt","Number","isNotString","itemIsNumeric","parseFloat","isFinite","isFunction","requireNotEmpty","itemIsString","isNotEmpty","length","itemIsObject","keys","isIsoString","isCorrectLength","nonNumbersIsValid","split","filter","character","isEmailOrPhone","string","indexOf","generateRandomNumberString","repeatFunction","generateRandomInteger","callback","count","values","push","repeatString","joiner","isValidPhone","phone","sanitizePhone","obfuscatePhone","obfuscateEmail","email","isValidEmail","emailSplit","sanitizeEmail","part1","part2","part2Split","ending","pop","test","trim","replace","toLowerCase","arrayOfStringsContainsValue","array","getIndexOfItemThatContainsValueFromArray","foundIndex","convertValueToStringValue","pluralityQualifier","pluralQualifier","singularQualifier","type","defaultValue","typeMap","copyObject","parse","searchStringToQueryParams","searchString","newString","shift","decodeURI","getQueryObjectFromUrl","extractSearchString","extractEndpointWithoutSearchString","extractNumbersFromString","sortArrayOfObjectsByKey","items","descending","sort","b","valueA","_getValueForSorting","valueB","comparison","roundNumber","decimals","multiplier","Math","pow","round","formatAsCurrency","amount","decimalCount","decimalSymbol","decimal","thousandSymbol","thousands","currencySign","abs","negativeSign","toFixed","j","stringArray","console","log","toProperCase","txt","charAt","extractQueryParametersFromUrl","urlSplit","decodedSearch","optionObj","valueSplit","objectToQueryString","queryObject","encodeURIComponent","numberToPercentage","number","numberWithCommas","min","max","floor","random","getTime","n","t","r","s","XMLHttpRequest","o","u","responseURL","responseText","blob","Blob","clone","get","has","l","open","onload","getAllResponseHeaders","onerror","withCredentials","credentials","setRequestHeader","send","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","getter","__esModule","d","definition","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","HttpService","TypeService","UtilityService"],"sourceRoot":""}