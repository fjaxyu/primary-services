{"version":3,"file":"PrimaryServices.js","mappings":"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","sources":["webpack://PrimaryServices/webpack/universalModuleDefinition","webpack://PrimaryServices/./node_modules/node-fetch/browser.js","webpack://PrimaryServices/./node_modules/unfetch/dist/unfetch.module.js","webpack://PrimaryServices/webpack/bootstrap","webpack://PrimaryServices/webpack/runtime/define property getters","webpack://PrimaryServices/webpack/runtime/hasOwnProperty shorthand","webpack://PrimaryServices/webpack/runtime/make namespace object","webpack://PrimaryServices/./src/components/TypeService/index.ts","webpack://PrimaryServices/./src/components/UtilityService/index.ts","webpack://PrimaryServices/./src/components/HttpService/index.ts","webpack://PrimaryServices/./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PrimaryServices\"] = factory();\n\telse\n\t\troot[\"PrimaryServices\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @description this ensures that an item is undefined\n *\n * @param {*} item - item to be tested\n * @returns {Boolean} - true or false\n */\nexport function isUndefined(item) {\n    return typeof item === 'undefined';\n}\n\n\n\n/**\n * @description this ensures that an item is null\n *\n * @param {*} item - item to be tested\n * @returns {Boolean} - true or false\n */\nexport function isNull(item) {\n    return item === null;\n}\n\n\n\n/**\n *@description this ensures an item is a date, or a valid date string\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [allowString=false] - allow a user to test if an item is a string and a valid date object\n * @returns {Boolean} - true or false\n */\nexport function isDate(item, allowString?) {\n    const isNotInvalidType = (!isUndefined(item) && !isNull(item) && !isNumeric(item) && !isBoolean(item) && !isArray(item));\n    const stringAllowance = (allowString !== true) ? !isString(item) : true;\n\n    if (isNotInvalidType && stringAllowance) {\n        if (allowString === true) {\n            item = new Date(item);\n        }\n\n        return ((item instanceof Date === true) && (item.toString() !== 'Invalid Date'));\n\n    } else {\n        return false;\n    }\n}\n\n\n\n/**\n * @description this ensures that an item is explicitly true or false\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [allowString=false] - allow 'true' and 'false' to return true\n * @param {*=} [equalityVal=null] - (true/false) if equalityVal is present, it will check to see if the value is true or false\n * @returns {Boolean} - true or false\n */\nexport function isBoolean(item, allowString?: boolean, equalityVal?: boolean | string) {\n    const itemIsBoolean = (item === true || item === false);\n    const itemIsStringBoolean = (item === 'true' || item === 'false');\n\n    if (equalityVal && equalityVal === 'true' || equalityVal === true || equalityVal === 'false' || equalityVal === false) {\n        const bothAreTrue = ((item === true || item === 'true') && (equalityVal === true || equalityVal === 'true'));\n        const bothAreFalse = ((item === false || item === 'false') && (equalityVal === false || equalityVal === 'false'));\n        const equalityValCheck = (bothAreFalse || bothAreTrue);\n\n        return ((allowString === true) ? (itemIsBoolean || itemIsStringBoolean) : itemIsBoolean) && equalityValCheck;\n    } else {\n        return (allowString === true) ? (itemIsBoolean || itemIsStringBoolean) : itemIsBoolean;\n    }\n}\n\n\n\n/**\n * @description this ensures that an item is an integer (a number without decimals)\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [withoutTypeConversion=false] - require that the item is not a string\n * @returns {Boolean} - true or false\n */\nexport function isInteger(item, withoutTypeConversion?: boolean) {\n    const itemIsInteger = (!isUndefined(item) && !isNull(item) && !isNaN(item) && (parseInt(Number(item) as any) == item) && !isNaN(parseInt(item, 10))); // eslint-disable-line\n    const isNotString = (withoutTypeConversion === true) ? (itemIsInteger === true && !isString(item)) : true;\n    return (itemIsInteger === true && isNotString === true);\n}\n\n\n\n/**\n * @description this ensures than an item is a number (with or without decimals)\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [withoutTypeConversion=false] - require that the item is not a string\n * @returns {Boolean} - true or false\n */\nexport function isNumeric(item, withoutTypeConversion?: boolean) {\n    const itemIsNumeric = (!isUndefined(item) && !isNull(item) && !isNaN(parseFloat(item)) && isFinite(item));\n    const isNotString = (withoutTypeConversion === true) ? (itemIsNumeric === true && !isString(item)) : true;\n    return (itemIsNumeric === true && isNotString === true);\n}\n\n\n\n/**\n * @description this ensures that an item is a function\n *\n * @param {*} item - item to be tested\n * @returns {Boolean} - true or false\n */\nexport function isFunction(item) {\n    return (!isUndefined(item) && !isNull(item) && typeof item === 'function');\n}\n\n\n\n/**\n * @description this ensures that an item is a string\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [requireNotEmpty=false] - require that the string has a length of at least one\n * @returns {Boolean} - true or false\n */\nexport function isString(item, requireNotEmpty?: boolean) {\n    const itemIsString = (!isUndefined(item) && !isNull(item) && typeof item === 'string');\n    const isNotEmpty = (requireNotEmpty === true) ? (itemIsString === true && item.length > 0) : true;\n    return (itemIsString === true && isNotEmpty === true);\n}\n\n\n\n/**\n * @description this ensures than an item is an object\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [requireNotEmpty=false] - require that the object has at least one key\n * @returns {Boolean} - true or false\n */\nexport function isObject(item, requireNotEmpty?: boolean) {\n    const itemIsObject = (!isUndefined(item) && !isNull(item) && !isDate(item) && typeof item === 'object' && !isFunction(item) && Array.isArray(item) === false);\n    const isNotEmpty = (requireNotEmpty === true) ? (itemIsObject === true && Object.keys(item).length > 0) : true;\n    return (itemIsObject === true && isNotEmpty === true);\n}\n\n\n\n/**\n * @description this ensures than an item is an array\n *\n * @param {*} item - item to be tested\n * @param {Boolean} [requireNotEmpty=false] - require that the array has a length of at least one\n * @returns {Boolean} - true or false\n */\nexport function isArray(item, requireNotEmpty?: boolean) {\n    const isArray = !isUndefined(item) && !isNull(item) && Array.isArray(item);\n    const isNotEmpty = (requireNotEmpty === true) ? (isArray === true && item.length > 0) : true;\n    return (isArray === true && isNotEmpty === true);\n}\n\n\n/**\n *\n * @param {*} item\n * @returns {boolean} - true or false\n */\nexport function isIsoString(item) {\n    if (isString(item, true)) {\n        const isCorrectLength = item.length === 25;\n        const nonNumbersIsValid = item.split('').filter((character) => isNaN(character)).join('') === '--T::+:';\n\n        return isCorrectLength && nonNumbersIsValid;\n    } else {\n        return false;\n    }\n}\n\n\n\nexport default {\n    isUndefined: isUndefined,\n    isNull: isNull,\n    isDate: isDate,\n    isBoolean: isBoolean,\n    isInteger: isInteger,\n    isNumeric: isNumeric,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isArray: isArray,\n    isIsoString: isIsoString\n};","import TypeService from './../TypeService';\n\n//--==--==----==--==--==--==----==--==----==--==----==--==--==--==----==--==--//\n\n\n/**\n *\n * @param string\n * @returns {string}\n */\nexport function isEmailOrPhone(string) {\n    if (TypeService.isString(string, true)) {\n        return (string.indexOf('@') >= 0) ? 'email' : 'phone';\n    } else {\n        throw new Error('input is not string or is empty');\n    }\n}\n\n\n\n/**\n *\n * @param {Number} length\n * @returns {string}\n */\nexport function generateRandomNumberString(length) {\n    if (!TypeService.isInteger(length, true)) {\n        throw new Error('length (Integer) is required');\n    }\n\n    return repeatFunction(generateRandomInteger, length).join('');\n}\n\n\n\n/**\n *\n * @param {Function} callback\n * @param {Number} count\n * @returns {Array}\n */\nexport function repeatFunction(callback: Function, count) {\n    if (!TypeService.isFunction(callback)) {\n        throw new Error('callback (Function) is required');\n    }\n\n    if (!TypeService.isInteger(count)) {\n        throw new Error('count (Integer) is required');\n    }\n\n    const values = [];\n\n    for (let i = 0; i < count; i++) {\n        // @ts-ignore\n        values.push(callback());\n    }\n\n    return values;\n}\n\n\n\n/**\n *\n * @param {String} string\n * @param {Number} count\n * @param {String} [joiner]\n * @returns {string}\n */\nexport function repeatString(string, count, joiner?: string) {\n    joiner = (TypeService.isString(joiner)) ? joiner : '';\n\n    return repeatFunction(() => {\n        return string;\n    }, count).join(joiner);\n}\n\n\n\n/**\n *\n * @param {String} phone\n * @returns {boolean}\n */\nexport function isValidPhone(phone) {\n    return !!((TypeService.isString(phone) || TypeService.isInteger(phone)) && sanitizePhone(phone).length === 10);\n}\n\n\n\n/**\n *\n * @param {String} phone\n * @returns {String}\n */\nexport function obfuscatePhone(phone) {\n    if (isValidPhone(phone)) {\n        phone = sanitizePhone(phone);\n\n        return `(${phone.substr(0, 1)}**) ***-**${phone.substr(8, 2)}`;\n    } else {\n        throw new Error('phone (String) must be 10 digits long and only numbers');\n    }\n}\n\n\n\n/**\n *\n * @param {String} email\n * @returns {string}\n */\nexport function obfuscateEmail(email) {\n    if (isValidEmail(email)) {\n        email = sanitizeEmail(email);\n        const charactersToBeShown = 2;\n\n        let emailSplit = email.split('@');\n\n        const part1 = emailSplit[0];\n        let part2 = emailSplit[1];\n\n        let part2Split = part2.split('.');\n        const ending = '.' + part2Split[part2Split.length - 1];\n\n        part2Split.pop();\n\n        part2 = part2Split.join('.');\n\n\n        let parts = [\n            part1.substr(0, charactersToBeShown),\n            repeatString('*', part1.length - charactersToBeShown),\n            '@',\n            part2.substr(0, charactersToBeShown),\n            repeatString('*', part2.length - charactersToBeShown),\n            ending\n        ];\n\n        return parts.join('');\n    } else {\n        throw new Error('email (String) must be a valid email');\n    }\n}\n\n\n\n/**\n *\n * @param {String} email\n * @returns {boolean}\n */\nexport function isValidEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (TypeService.isString(email)) {\n        return re.test(email.trim());\n    } else {\n        return false;\n    }\n}\n\n\n\n/**\n *\n * @param {String} phone\n * @returns {String}\n */\nexport function sanitizePhone(phone) {\n    if (TypeService.isInteger(phone, true)) {\n        phone = '' + phone;\n    }\n\n    return phone.replace(/[^0-9]/g, '').trim();\n}\n\n\n\n/**\n *\n * @param {String} email\n * @returns {string}\n */\nexport function sanitizeEmail(email) {\n    return email.trim().toLowerCase();\n}\n\n\n\n/**\n *\n * @param {Array} array\n * @param {String} value\n * @returns {boolean}\n */\nexport function arrayOfStringsContainsValue(array, value) {\n    if (!TypeService.isArray(array)) {\n        throw new Error('array (Array) is required');\n    } else if (!TypeService.isString(value, true)) {\n        throw new Error('value (String) is required and cannot be empty');\n    }\n\n    return (getIndexOfItemThatContainsValueFromArray(array, value) > -1);\n}\n\n\n\n/**\n *\n * @param {Array} array\n * @param {String} value\n * @returns {number}\n */\nexport function getIndexOfItemThatContainsValueFromArray(array, value) {\n    if (!TypeService.isArray(array)) {\n        throw new Error('array (Array) is required');\n    } else if (!TypeService.isString(value, true)) {\n        throw new Error('value (String) is required and cannot be empty');\n    }\n\n    let foundIndex = -1;\n\n    for (let i = 0; i < array.length; i++) {\n        const arrayItem = array[i];\n\n        if (arrayItem.includes(value)) {\n            foundIndex = i;\n            i = array.length;\n        }\n    }\n\n    return foundIndex;\n}\n\n\n\n/**\n *\n * @param {*} value\n *\n * @returns {string}\n */\nexport function convertValueToStringValue(value) {\n    if (TypeService.isArray(value, true) || TypeService.isObject(value, true)) {\n        return JSON.stringify(value);\n    } else if (TypeService.isString(value)) {\n        return '\"' + value + '\"';\n    } else {\n        return '' + value;\n    }\n}\n\n\n\n/**\n * @description This function will check if a value is equal to 1, and return a string if the value is plural or not\n *\n * @param {Number} count\n * @param {String} [pluralQualifier] - The value to be returned if not singular\n * @param {String} [singularQualifier] - The value to be returned if singular\n *\n * @returns {string}\n */\nexport function pluralityQualifier(count: number, pluralQualifier?: string, singularQualifier?: string): string {\n    pluralQualifier = (TypeService.isString(pluralQualifier)) ? pluralQualifier : '';\n    singularQualifier = (TypeService.isString(singularQualifier)) ? singularQualifier : '';\n\n    return ((count === 1) ? singularQualifier : pluralQualifier) as string;\n}\n\n\n\n/**\n *\n * @param {*} item\n * @param {'undefined' | 'null' | 'object' | 'date' | 'boolean' | 'integer' | 'number' | 'function' | 'string' | 'array'} type\n * @param {*} [defaultValue]\n *\n * @returns {*}\n */\nexport function validateItem(item: any, type: (\n    'undefined' | 'null' | 'object' | 'date' | 'boolean' | 'integer' | 'number' | 'function' | 'string' | 'array'\n    ), defaultValue: any): any {\n    const typeMap = {\n        'undefined': TypeService.isUndefined,\n        'null': TypeService.isNull,\n        'object': TypeService.isObject,\n        'date': TypeService.isDate,\n        'boolean': TypeService.isBoolean,\n        'integer': TypeService.isInteger,\n        'number': TypeService.isNumeric,\n        'function': TypeService.isFunction,\n        'string': TypeService.isString,\n        'array': TypeService.isArray\n    };\n\n    const key = type.toLowerCase();\n\n    if (typeMap[key]) {\n        return (typeMap[key](item) === true) ? item : defaultValue;\n    } else {\n        throw new Error('invalid key');\n    }\n}\n\n\n\nexport function copyObject(item: any): any {\n    return JSON.parse(JSON.stringify({value: item})).value;\n}\n\n\n\nexport function searchStringToQueryParams(searchString: string): Record<any, unknown> {\n    if (searchString.includes('?')) {\n        let newString = searchString.split('?');\n        newString.shift();\n        searchString = newString.join('?');\n    }\n\n    try {\n        if (!(searchString.length >= 1)) {\n            return {};\n        }\n\n        return JSON.parse('{\"' + decodeURI(searchString).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n    } catch (error) {\n        return {};\n    }\n}\n\n\n\nexport function getQueryObjectFromUrl(url: string): Record<any, unknown> {\n    return searchStringToQueryParams(extractSearchString(url));\n}\n\n\n\nexport function extractEndpointWithoutSearchString(url: string) {\n    return url && url.includes('?') ? url.split(/\\?/)[0] : url;\n}\n\n\n\nexport function extractNumbersFromString(string: string) {\n    return string.replace(/[^0-9]/g, '');\n}\n\n\n\nexport function extractSearchString(url: string) {\n    return url && url.includes('?') ? url.split(/\\?/)[1] : '';\n}\n\n\n\nexport function sortArrayOfObjectsByKey(items: any[], key: string, descending = false) {\n    items = validateItem(items, 'array', []);\n\n    return items.sort(function (a, b) {\n        const valueA = _getValueForSorting(a[key]);\n        const valueB = _getValueForSorting(b[key]);\n\n        let comparison = 0;\n\n        if (valueA > valueB) {\n            comparison = -1;\n        } else if (valueA < valueB) {\n            comparison = 1;\n        }\n\n        return (descending === true) ? comparison : comparison * -1;\n    });\n}\n\n\n\nexport function roundNumber(value, decimals) {\n    decimals = validateItem(decimals, 'integer', 0);\n    const multiplier = Math.pow(10, decimals);\n\n    return (Math.round(value * multiplier) / multiplier);\n}\n\n\n\nexport function formatAsCurrency(amount: number, options?: { decimals?: number, round?: number, decimal?: string, thousands?: string, currencySign?: string }): string | null {\n    let decimalCount = validateItem(options && options.decimals, 'number', 2);\n\n    let round = validateItem(options && options.round, 'number', decimalCount);\n\n    let decimalSymbol = validateItem(options && options.decimal, 'string', '.');\n    let thousandSymbol = validateItem(options && options.thousands, 'string', ',');\n    const currencySign = validateItem(options && options.currencySign, 'string', '$');\n\n    try {\n        decimalCount = Math.abs(decimalCount);\n        decimalCount = TypeService.isInteger(decimalCount) ? 2 : decimalCount;\n\n        amount = validateItem(amount, 'number', 0);\n        const isNegative = amount < 0;\n        const negativeSign = (isNegative) ? '-' : '';\n\n        amount = roundNumber(amount, round);\n\n        let i = parseInt(Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n        let j = (i.length > 3) ? i.length % 3 : 0;\n\n        let stringArray = [\n            negativeSign,\n\n            currencySign,\n\n            (j ? i.substr(0, j) + thousandSymbol : ''),\n\n            i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandSymbol)\n        ];\n\n        if (decimalCount > 0) {\n            stringArray.push(decimalSymbol);\n\n            // @ts-ignore\n            stringArray.push(Math.abs(amount).toFixed(decimalCount).split('.')[1]);\n        }\n\n        return stringArray.join('');\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n}\n\n\n\n/**\n * @params {String} text\n *\n * @returns {String}\n */\nexport function toProperCase(text) {\n    if (TypeService.isString(text)) {\n        return text.replace(\n            /\\w\\S*/g,\n            function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    } else {\n        return text;\n    }\n}\n\n\n\nexport function extractQueryParametersFromUrl(url) {\n    let parameterObject = {};\n    let urlSplit = url.split('?');\n\n    if (urlSplit.length > 0) {\n        urlSplit.shift();\n\n        url = urlSplit.join('?');\n\n        const decodedSearch = decodeURI(url);\n\n        if (TypeService.isString(decodedSearch, true)) {\n            const options = decodedSearch.split('&');\n\n            options.forEach((optionObj) => {\n                if (TypeService.isString(optionObj, true) && optionObj.includes('=')) {\n                    const valueSplit = optionObj.split('=');\n                    let key, value;\n\n                    key = valueSplit[0];\n\n                    if (valueSplit.length > 1) {\n                        value = valueSplit[1].split('%2C').join(',');\n                    }\n\n                    parameterObject[key] = value;\n                }\n            });\n        }\n    }\n\n    return parameterObject;\n}\n\n\n\nexport function objectToQueryString(queryObject) {\n    const keys = Object.keys(queryObject);\n\n    return keys.filter((key) => !TypeService.isUndefined(queryObject[key])).map((key) => {\n        return [key, encodeURIComponent(queryObject[key])].join('=');\n    }).join('&');\n}\n\n\n\nexport function isJson(item: any | string): boolean {\n    try {\n        item = JSON.parse(item);\n    } catch (e) {\n        return false;\n    }\n\n    return true;\n}\n\n\n\nexport function numberToPercentage(number: number, decimals: number): string {\n    return round(number * 100, decimals) + '%';\n}\n\n\n\nexport function round(number: number, decimals: number): number {\n    return +(Math.round(number + ('e+' + decimals) as any) + 'e-' + decimals);\n}\n\n\n\nexport function numberWithCommas(number = 0): string {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\n\n\n/**\n *\n * @param {Number} [min]\n * @param {Number} [max]\n *\n * @returns {Number}\n * @private\n */\nexport function generateRandomInteger(min, max) {\n    min = validateItem(min, 'integer', 0);\n    max = validateItem(max, 'integer', 9);\n\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n\nexport function _getValueForSorting(value) {\n    if (TypeService.isDate(value)) {\n        return value.getTime();\n    } else if (TypeService.isNumeric(value)) {\n        return Number(value);\n    } else if (TypeService.isString(value)) {\n        return value.toUpperCase();\n    } else {\n        return value;\n    }\n}\n\n\n\nexport default {\n    isEmailOrPhone,\n    generateRandomNumberString,\n    repeatFunction,\n    repeatString,\n    isValidPhone,\n    obfuscatePhone,\n    isJson,\n    extractQueryParametersFromUrl,\n    obfuscateEmail,\n    isValidEmail,\n    sanitizePhone,\n    numberToPercentage,\n    round,\n    numberWithCommas,\n    sanitizeEmail,\n    roundNumber,\n    toProperCase,\n    objectToQueryString,\n    formatAsCurrency,\n    arrayOfStringsContainsValue,\n    getIndexOfItemThatContainsValueFromArray,\n    convertValueToStringValue,\n    pluralityQualifier,\n    validateItem,\n    copyObject,\n    searchStringToQueryParams,\n    getQueryObjectFromUrl,\n    extractEndpointWithoutSearchString,\n    extractNumbersFromString,\n    extractSearchString,\n    sortArrayOfObjectsByKey,\n    generateRandomInteger,\n    _getValueForSorting\n};","import UtilityService from '../UtilityService';\nimport TypeService from '../TypeService';\n\nlet fetch;\n\ntry {\n    if (typeof window !== 'undefined') {\n        //browser\n        fetch = require('unfetch');\n    } else {\n        //server\n        fetch = require('node-fetch').default;\n    }\n} catch (error) {\n    fetch = require('node-fetch').default;\n}\n\n\n//--==--==----==--==--==--==----==--==----==--==----==--==--==--==----==--==--//\n//PUBLIC METHODS\n\n\n/**\n *\n * @param {Object} options\n * @param {String} options.url\n * @param {'GET' | 'POST' | 'PUT' | 'DELETE'} options.method\n *\n * @param {Object} [options.body]\n * @param {Object} [options.data]\n * @param {Boolean} [options.useDefaultHeaders]\n * @param {Object} [options.query]\n *\n * @param {Object} [options.params]\n * @param {Object} [options.parameters]\n *\n * @param {Object} [options.headers]\n * @param {Object} [options.header]\n * @returns {Promise<any>}\n */\n\ntype AnyObject = Record<any, unknown>;\n\nexport type ValidBody = AnyObject | any[] | string | number;\n\nexport type HttpOptions = {\n    url: string,\n    method: 'GET' | 'PUT' | 'POST' | 'DELETE',\n    body?: ValidBody,\n    data?: ValidBody,\n    useDefaultHeaders?: boolean,\n    params?: AnyObject,\n    parameters?: AnyObject,\n    query?: AnyObject,\n    headers?: AnyObject,\n    header?: AnyObject,\n}\n\n\nexport type HttpResponse = {\n    status: number,\n    data: any,\n    response: ValidBody,\n    ok: boolean,\n    request: {\n        body: ValidBody,\n        method: HttpOptions['method'],\n        params: AnyObject,\n        url: string,\n        headers: AnyObject\n    }\n}\n\nexport async function http(options: HttpOptions): Promise<HttpResponse> {\n    return new Promise(async (resolve, reject) => {\n        const validMethods = ['GET', 'PUT', 'POST', 'DELETE'];\n\n        if (TypeService.isObject(options) === false) {\n            return reject(new Error('options (Object) is required'));\n        } else if (TypeService.isString(options.url) === false) {\n            return reject(new Error('options.url (String) is required'));\n        } else if (TypeService.isString(options.method) === false) {\n            return reject(new Error('options.method (String) is required'));\n        } else if (validMethods.includes(options.method.toUpperCase()) === false) {\n            return reject(new Error(`options.method must be one of the following values ${JSON.stringify(validMethods)}`));\n        }\n\n        options = UtilityService.validateItem(options, 'object', {});\n        options.useDefaultHeaders = (options.useDefaultHeaders !== false);\n\n        let body = <any>undefined;\n\n        if (TypeService.isObject(options.data)) {\n            body = options.data;\n        } else if (TypeService.isObject(options.body)) {\n            body = options.body;\n        }\n\n        if (TypeService.isArray(body) || TypeService.isObject(body)) {\n            body = JSON.stringify(body);\n        }\n\n\n        let url = options.url;\n        let parameterObject = {};\n\n        if (TypeService.isObject(options.params)) {\n            parameterObject = options.params as AnyObject;\n        } else if (TypeService.isObject(options.parameters)) {\n            parameterObject = options.parameters as AnyObject;\n        } else if (TypeService.isObject(options.query)) {\n            parameterObject = options.query as AnyObject;\n        }\n\n        if (TypeService.isObject(parameterObject, true)) {\n            const stringParams = Object.entries(parameterObject).map(([key, val]) => {\n                val = (Array.isArray(val) || typeof val === 'object') ? JSON.stringify(val) : val;\n                return `${key}=${val}`;\n            }).join('&');\n\n            url = url + '?' + encodeURI(stringParams);\n        }\n\n\n        let headers = {};\n\n        if (TypeService.isObject(options.headers)) {\n            headers = options.headers as AnyObject;\n        } else if (TypeService.isObject(options.header)) {\n            headers = options.header as AnyObject;\n        }\n\n        if (options.useDefaultHeaders) {\n            headers['accept'] = 'application/json';\n            headers['content-type'] = 'application/json';\n        }\n\n\n        let method = options.method.toUpperCase();\n\n        if (method === 'GET') {\n            headers['Accept'] = 'application/x-www-form-urlencoded';\n            headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        }\n\n\n        const isAbsoluteUrl = (url.substr(0, 4) === 'http');\n\n\n        let response = {\n            headers: {},\n            status: 0,\n            statusText: null\n        };\n\n        fetch(url, {\n            method,\n            headers,\n            body\n        }).then((responseData) => {\n            let status = responseData.status;\n\n            response = {\n                status: responseData.status,\n                headers: _getAllHeaders(responseData),\n                statusText: responseData.statusText\n            };\n\n            let isJson = false;\n\n            try {\n                isJson = response.headers['content-type'].includes('application/json');\n            } catch (e) {\n                isJson = false;\n            }\n\n            let jsonResponse = {};\n\n            if (status === 204) {\n                jsonResponse = '';\n            } else {\n                if (isJson) {\n                    jsonResponse = responseData.json();\n                } else {\n                    jsonResponse = responseData.text();\n                }\n            }\n\n            return jsonResponse;\n        }).then((responseJson) => {\n            const responseObject = {\n                status: response.status,\n                data: responseJson,\n                response: response,\n                ok: (response.status >= 200 && response.status < 300),\n                request: {\n                    body: body,\n                    method: method,\n                    params: parameterObject,\n                    url: url,\n                    headers: headers\n                }\n            } as HttpResponse;\n\n            resolve(responseObject);\n        }).catch(reject);\n    });\n}\n\n\n//--==--==----==--==--==--==----==--==----==--==----==--==--==--==----==--==--//\n//PRIVATE METHODS\n\n\n/**\n *\n * @param {Object} responseData\n * @param {Array} responseData.headers\n * @private\n */\nexport function _getAllHeaders(responseData: { headers }) {\n    if (!TypeService.isObject(responseData)) {\n        throw Error('responseData (Object) is required');\n    }\n\n    let headers = {};\n\n    responseData.headers.forEach((value, name) => {\n        headers[name] = value;\n    });\n\n    return headers;\n}\n\n\n\nexport default {\n    http: http,\n    _getAllHeaders: _getAllHeaders\n};","import HttpService from './src/components/HttpService';\nexport {HttpService};\n\n\n\nimport TypeService from './src/components/TypeService';\nexport {TypeService};\n\n\n\nimport UtilityService from './src/components/UtilityService';\nexport {UtilityService};\n\n\n\nexport default {\n    HttpService,\n    TypeService,\n    UtilityService\n};"],"names":["root","factory","exports","module","define","amd","this","global","self","window","Error","getGlobal","fetch","bind","Headers","Request","Response","e","n","Promise","t","r","s","XMLHttpRequest","o","u","i","a","ok","status","statusText","url","responseURL","text","resolve","responseText","json","then","JSON","parse","blob","Blob","response","clone","headers","keys","entries","get","toLowerCase","has","l","open","method","onload","getAllResponseHeaders","replace","push","onerror","withCredentials","credentials","setRequestHeader","send","body","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","isUndefined","item","isNull","isDate","allowString","isNotInvalidType","isNumeric","isBoolean","isArray","stringAllowance","isString","Date","toString","equalityVal","itemIsBoolean","itemIsStringBoolean","withoutTypeConversion","itemIsNumeric","isNaN","parseFloat","isFinite","isNotString","isFunction","requireNotEmpty","itemIsString","isNotEmpty","length","Array","isInteger","itemIsInteger","parseInt","Number","isObject","itemIsObject","isIsoString","isCorrectLength","nonNumbersIsValid","split","filter","character","join","repeatFunction","callback","count","TypeService","values","repeatString","string","joiner","isValidPhone","phone","sanitizePhone","isValidEmail","email","test","trim","sanitizeEmail","getIndexOfItemThatContainsValueFromArray","array","foundIndex","includes","validateItem","type","defaultValue","typeMap","searchStringToQueryParams","searchString","newString","shift","decodeURI","error","extractSearchString","roundNumber","decimals","multiplier","Math","pow","round","number","generateRandomInteger","min","max","floor","random","_getValueForSorting","getTime","toUpperCase","isEmailOrPhone","indexOf","generateRandomNumberString","obfuscatePhone","substr","isJson","extractQueryParametersFromUrl","parameterObject","urlSplit","decodedSearch","forEach","optionObj","valueSplit","obfuscateEmail","emailSplit","part1","part2","part2Split","ending","pop","numberToPercentage","numberWithCommas","toProperCase","txt","charAt","objectToQueryString","queryObject","map","encodeURIComponent","formatAsCurrency","amount","options","decimalCount","decimalSymbol","decimal","thousandSymbol","thousands","currencySign","abs","negativeSign","toFixed","j","stringArray","console","log","arrayOfStringsContainsValue","convertValueToStringValue","stringify","pluralityQualifier","pluralQualifier","singularQualifier","copyObject","getQueryObjectFromUrl","extractEndpointWithoutSearchString","extractNumbersFromString","sortArrayOfObjectsByKey","items","descending","sort","b","valueA","valueB","comparison","_getAllHeaders","responseData","name","http","reject","validMethods","UtilityService","useDefaultHeaders","data","params","parameters","query","stringParams","val","encodeURI","header","responseJson","responseObject","request","catch","HttpService"],"sourceRoot":""}